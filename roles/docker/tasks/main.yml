---
- name: ping hosts
  ping:

- name: check OS
  debug: msg={{ ansible_os_family }}-{{ ansible_distribution }}{{ ansible_distribution_version }}-{{ ansible_distribution_release }}

# ==== Debian/Ubuntu ====
- name: preinstallations for Debian/Ubuntu
  apt:
    name:
      - gnupg
      - apt-transport-https
      - ca-certificates
      - curl
      - sudo
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: add docker GPG key for Debian/Ubuntu
  shell: curl -sSL https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  when: ansible_os_family == "Debian"

- name: add docker repo for Debian/Ubuntu
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release|lower }} stable
    validate_certs: yes
    state: present
    filename: docker
  when: ansible_os_family == "Debian"

- name: install docker-ce for debian, ubuntu
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    update_cache: yes
  when: ansible_os_family == "Debian"

# ==== CentOS ====
- name: add Docker repo for CentOS
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
  when: ansible_os_family == "RedHat"

- name: install docker-ce for CentOS
  yum:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
  when: ansible_os_family == "RedHat"

- name: enable Docker and ensure it is not masked
  systemd:
    name: docker
    enabled: yes
    masked: no

- name: make sure docker is started
  systemd:
    state: started
    name: docker